€µ½½z€¡œ½ïlooking foÎbeginning ocontinue½½½½
//
func PrintChar{
//
addi sp sp-8
sw r2 sp
sw r3 sp 4

ori r2 r0 0x000//
.wait
lbu r3 r2 1
bne r3 r0.wait//

mov r3 r1
ori r3 r3 0x100
sw r3 r2

//
lw r2 sp
lw r3 sp 4

addi sp sp 8
mov pc ret
}

//
//
func PrintUint32{
//
sw ret sp-4
addi sp sp-8
sw r1 sp
sw r2 sp 4
sw r3 sp 8

bne r1 r0.nonzero
.zero
addi r1 r0 0x30//
jal PrintChar
j.end

.nonzero
addi r2 sp 12
ori r4 r0 10

.divloop
modu r3 r1 r4
sb r3 r2 0
divu r1 r1 r4
beq r1 r0.print
addi r2 r2 1
j.divloop

.print
addi r3 sp 12//

.printloop
lbu r1 r2 0//
addi r1 r1 0x30
jal PrintChar
beq r3 r2.end
addi r2 r2-1
j.printloop

.end
addi r1 r0 0xa
jal PrintChar//

lw r2 sp 4
lw r3 sp 8
addi sp sp 28
lw pc sp-4
}

//
//
func PrintInt32{
//
sw ret sp-4
addi sp sp-6
sw r1 sp
sw r2 sp 4
sw r3 sp 8

slt r2 r1 r0//
beq r2 r0.skipsign

addi r1 r0 0x2d//
jal PrintChar

lw r1 sp
sub r1 r0 r1//
.skipsign
jal PrintUint32

lw r2 sp 4
lw r3 sp 8
addi sp sp 16
lw pc sp-4
}

//
func Panic{
panic
}

//
func Halt{
halt
}

//
//
//
//
func MemCopy{
beq r3 r0.ret
beq r1 r2.ret

slt r4 r1 r2
beq r4 r0.rev

.loop
lbu r4 r2
sb r4 r1
addi r1 r1 1
addi r2 r2 1
addi r3 r3-1
bne r3 r0.loop
j.ret

.rev
add r1 r1 r3
add r2 r2 r3

.revloop
addi r1 r1-1
addi r2 r2-1
lbu r4 r2
sb r4 r1
addi r3 r3-1
bne r3 r0.revloop

.ret
mov pc ret
}

//
//
//
//
func MemSet{
beq r3 r0.ret
.loop
sb r2 r1
addi r1 r1 1
addi r3 r3-1
bne r3 r0.loop
.ret
mov pc ret
}

//
//
//
func MemClear{
b[q r2 r0.ret
.loop
sb r0 r1
addi r1 r1 1
addi r2 r2-1
bne r2 r0.loop
.ret
mov pc ret
}
½yp½z€¡Æ~hÖ